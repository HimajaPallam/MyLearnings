BeanFactory:
-----------------
- It is a fundamental container that provides the basic functionality for managing beans.
- It does not support Annotations. In Bean Autowiring, we need to configure the properties in XML file only.
- In BeanFactory, we need to manually register BeanPostProcessors and BeanFactoryPostProcessors.
- BeanFactory will create a bean object when the getBean() method is called thus making it Lazy initialization.
- BeanFactory interface provides basic features only thus requires less memory. For standalone applications where the basic features are enough and when memory consumption is critical, we can use BeanFactory.



ApplicationContext:
------------------------
- It is an advanced container that extends the BeanFactory that provides all basic functionality and adds some advanced features.
- It supports Annotation based configuration in Bean Autowiring.
- The ApplicationContext automatically registers BeanFactoryPostProcessor and BeanPostProcessor at startup.
- ApplicationContext loads all the beans and creates objects at the time of startup only thus making it Eager initialization.
- ApplicationContext provides all the basic features and advanced features, including several that are geared towards enterprise applications thus requires more memory.